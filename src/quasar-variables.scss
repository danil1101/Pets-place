@use 'sass:math';

$green: #22a094;
$lightGreen: #4dad98;
$orange: #f1942c;

@function percent($px, $from) {
  $result: math.div($px, $from) * 100%;
  @return $result;
}

@function rem($px) {
  $result: math.div($px, 16) + rem;
  @return $result;
}

@function em($px, $current: 16) {
  $result: math.div($px, $current) + em;
  @return $result;
}

@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize,
  $widthFrom: $containerWidth,
  $widthTo: $minWidth,
  $keepSize: 0
) {
  @if ($startSize==0) {
    $startSize: 0.000001;
  }

  @if ($minSize==0) {
    $minSize: 0.000001;
  }

  $addSize: math.div($startSize - $minSize, 16);

  @if ($widthFrom ==$containerWidth and $maxWidthContainer ==0) {
    $widthFrom: $maxWidth;
  }

  $widthFromMedia: em($widthFrom);
  $widthToMedia: em($widthTo);

  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
  $yIntersection: -$widthTo * $slope + $minSize;

  @if ($yIntersection==0) {
    $yIntersection: 0.000001;
  }

  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;

  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};

  @if ($minSize > $startSize) {
    $propertyValue: #{'clamp('
      rem($startSize)
      ','
      $flyValue
      ','
      rem($minSize)
      ')'};
  }

  @supports (#{$property}: $propertyValue) {
    #{$property}: $propertyValue;
  }

  @supports not (#{$property}: $propertyValue) {
    #{$property}: calc(
      #{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div(
          $widthFrom,
          16
        ) - math.div($widthTo, 16)}
    );
  }

  @if $widthFrom
    !=$containerWidth and
    $widthFrom
    !=$maxWidth and
    $keepSize
    !=1 and
    $keepSize
    !=2
  {
    @media (min-width: $widthFromMedia) {
      #{$property}: inherit;
    }
  }

  @if $widthTo !=$minWidth and $keepSize !=1 and $keepSize !=3 {
    @media (max-width: $widthToMedia) {
      #{$property}: inherit;
    }
  }
}

$mainColor: #333333;
$fontFamily: Stolzl;
$minWidth: 320;
$fontSize: rem(16);
$maxWidth: 1920;
$maxWidthContainer: 1300;
$containerPadding: 80;
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em(
  $containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

[class*='__container'] {
  @if ($maxWidthContainer>0) {
    max-width: $maxWidthContainer + px;
    box-sizing: content-box;
    margin: 0 auto;
  }

  @if ($containerPadding>0) {
    @include adaptiveValue('padding-left', 40, 10);
    @include adaptiveValue('padding-right', 40, 10);
  }
}
